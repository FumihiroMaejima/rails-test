version: '3.7'

services:
  app:
    build: ./app
    container_name: ${PROJECT_NAME}_app
    command: ash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./app/backend:/var/www/html
    ports:
      - "${RAILS_PORT}:3000"
    depends_on:
      - db
    environment:
      TZ: "Asia/Tokyo"
      APP_URL: ${APP_URL}
    networks:
      default:

  # nginx:
  #   build: ./node/nginx
  #   container_name: ${PROJECT_NAME}_nginx
  #   volumes:
  #     - ./node/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./node/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./node/nginx/logs:/var/log/nginx
  #   depends_on:
  #     - app
  #   ports:
  #     - "${NGINX_HOST_HTTP_PORT}:80"
  #   environment:
  #     TZ: "Asia/Tokyo"
  #   networks:
  #     default:
  #       ipv4_address: ${SERVICE_NETWORK_IP}

  db:
    platform: 'linux/amd64'
    build: ./mysql
    container_name: ${PROJECT_NAME}_db
    volumes:
      - db-volume:/var/lib/mysql # データの永続化
      - ./mysql/files:/var/lib/mysql-files
      - ./mysql/initdb:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}" # MYSQL_TCP_PORTによってコンテナ側の接続すべきportが変わる
    environment:
      DB_USER: ${DB_USER}
      DB_DATABASE: ${DB_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_TCP_PORT: ${MYSQL_TCP_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: "Asia/Tokyo"
    networks:
      default:

volumes:
  db-volume:
    name: ${VOLUME_NAME}
    external: true

networks:
  default:
    external: true
    name: ${NETWORK_NAME}
